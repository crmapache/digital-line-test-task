@use 'sass:math';

@import '@assets/scss/variables';
@import '@assets/scss/mixins';

.preloader {
  $count: 10;
  $time: 2000;

  position: relative;

  width: 20px;
  height: 20px;

  animation: rotatePreloader $time + ms infinite ease-in;

  color: inherit;

  .dot {
    position: absolute;

    width: 100%;
    height: 100%;

    opacity: 0;
    color: inherit;

    &:before {
      position: absolute;
      top: 0;
      left: 50%;

      width: 10%;
      height: 10%;

      content: '';
      transition: background-color .2s;
      transform: translateX(-50%);

      color: inherit;
      border-radius: 50%;
      background-color: currentColor;
    }
  }

  &.size {
    &Sm {
      width: 14px;
      height: 14px;
    }

    &Md {
      width: 20px;
      height: 20px;
    }

    &Lg {
      width: 24px;
      height: 24px;
    }
  }

  @for $i from 1 through $count {
    .dot:nth-child(#{$i}) {
      z-index: $count - $i;

      transform: rotateZ((math.div(360, $count) * ($i - 1)) + deg);
      animation: rotateCircle + $i $time + ms infinite linear;
    }



    @keyframes rotateCircle#{$i} {
      #{percentage(math.div(math.div(50, $count) * ($i - 1), 100))} {
        opacity: 0;
      }
      #{percentage(math.div((math.div(50, $count) + .0001) * ($i - 1),  100))} {
        transform: rotateZ((0 - (math.div(360, $count) * ($i - 2))) + deg);

        opacity: 1;
      }
      #{percentage(math.div(((math.div(50, $count) * ($i - 0)) + 2), 100))} {
        transform: rotateZ((0 - (math.div(360, $count) * ($i - 1))) + deg);
      }
      #{percentage(math.div(((50 + (math.div(50, $count) * ($i - 0))) + 2), 100))} {
        transform: rotateZ((0 - (math.div(360, $count) * ($i - 1))) + deg);
      }
      100% {
        transform: rotateZ((0 - (math.div(360, $count) * ($count - 1))) + deg);

        opacity: 1;
      }
    }
  }

  @keyframes rotatePreloader {
    0% {
      transform: rotateZ(0deg);
    }
    100% {
      transform: rotateZ(-360deg);
    }
  }
}
